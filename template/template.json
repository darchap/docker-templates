{
    "version": "2",
    "templates": [
        {
            "categories": [
                "DNS",
                "Tools"
            ],
            "description": "Duck DNS is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence. First, go to duckdns site, register your subdomain and retrieve your token. Then go back here and deploy the docker container with your subdomain(s) and token. It will update your IP with the DuckDNS service every 5 minutes.",
            "env": [
                {
                    "default": "",
                    "label": "SUBDOMAINS (Comma Separated List)",
                    "name": "SUBDOMAINS"
                },
                {
                    "default": "",
                    "label": "TOKEN",
                    "name": "TOKEN"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Europe/Madrid",
                    "label": "TZ",
                    "name": "TZ"
                }
            ],
            "image": "linuxserver/duckdns:latest",
            "logo": "https://raw.githubusercontent.com/darchap/docker-templates/main/images/duckdns.png",
            "name": "duckdns",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Duck DNS",
            "type": 1,
            "note": "<h3>Template created by darchap</h3><b>Check my Github page: <a href=\"https://github.com/darchap/docker-templates\" target=\"_blank\">https://github.com/darchap/docker-templates</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.duckdns.org/\" target=\"_blank\">https://www.duckdns.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-duckdns\" target=\"_blank\">https://docs.linuxserver.io/images/docker-duckdns</a><br><br>"
        },
        {
            "categories": [
                "Proxy",
                "Tools"
            ],
            "description": "Nginx Proxy Manager with sqlite and Goaccess Charts enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Europe/Madrid",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "default": "False",
                    "label": "SKIP_ARCHIVED_LOGS",
                    "name": "SKIP_ARCHIVED_LOGS",
                    "description": "Defaults to false. Set to true to skip archived logs, i.e. proxy-host*.gz"
                },
                {
                    "default": "False",
                    "label": "BASIC_AUTH",
                    "name": "BASIC_AUTH",
                    "description": "Defaults to false. Set to true to enable nginx basic authentication. Docker container needs to stopped or restarted each time this flag is modified. This allows for the .htpasswd file to be changed accordingly."
                },
                {
                    "default": "user",
                    "label": "BASIC_AUTH_USERNAME Ignore if Basic Auth set to false",
                    "name": "BASIC_AUTH_USERNAME",
                    "description": "(Optional) Requires BASIC_AUTH to bet set to true. Username for basic authentication."
                },
                {
                    "default": "pass",
                    "label": "BASIC_AUTH_PASSWORD Ignore if Basic Auth set to false",
                    "name": "BASIC_AUTH_PASSWORD",
                    "description": "(Optional) Requires BASIC_AUTH to bet set to true. Password for basic authentication."
                }
            ],
            "logo": "https://raw.githubusercontent.com/darchap/docker-templates/main/images/nginx-proxy-manager.png",
            "name": "nginx-proxy-manager-sqlite-goaccess",
            "platform": "linux",
            "ports": [
                "80:80/tcp",
                "81:81/tcp",
                "443:443/tcp",
                "7880:7880/tcp"
            ],
            "repository": {
                "stackfile": "stack/nginx-proxy-manager.yml",
                "url": "https://github.com/darchap/docker-templates"
            },
            "restart_policy": "unless-stopped",
            "title": "Nginx Proxy Manager with Sqlite and Goaccess Charts",
            "type": 3,
            "note": "<h3>Template created by darchap</h3><b>Check my Github page: <a href=\"https://github.com/darchap/docker-templates\" target=\"_blank\">https://github.com/darchap/docker-templates</a></b><br><br><b>Official NPM Webpage: </b><a href=\"https://nginxproxymanager.com/\" target=\"_blank\">https://nginxproxymanager.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://nginxproxymanager.com/setup/#running-the-app\" target=\"_blank\">https://nginxproxymanager.com/setup/#running-the-app</a><br><b>Official GoAccess Documentation: </b><a href=\"https://github.com/xavier-hernandez/goaccess-for-nginxproxymanager\" target=\"_blank\">https://github.com/xavier-hernandez/goaccess-for-nginxproxymanager</a><br><br>"
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Alternative implementation of the Bitwarden server API written in Rust and compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.",
            "image": "vaultwarden/server:latest",
            "logo": "https://raw.githubusercontent.com/darchap/docker-templates/main/images/vaultwarden.png",
            "name": "vaultwarden",
            "platform": "linux",
            "ports": [
                "8010:80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Vaultwarden",
            "type": 1,
            "note": "<h3>Template created by darchap</h3><b>Check my Github page: <a href=\"https://github.com/darchap/docker-templates\" target=\"_blank\">https://github.com/darchap/docker-templates</a></b><br><br><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/vaultwarden/server\" target=\"_blank\">https://hub.docker.com/r/vaultwarden/server</a><br><br>",
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Vaultwarden",
                    "container": "/data"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Web",
                "Other"
            ],
            "description": "Speedtest Tracker is a self-hosted internet performance tracking application that runs speedtest checks against Ookla's Speedtest service.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "ghcr.io/alexjustesen/speedtest-tracker:latest",
            "logo": "https://raw.githubusercontent.com/darchap/docker-templates/main/images/speedtest.png",
            "name": "speedtest-tracker2",
            "platform": "linux",
            "ports": [
                "8765:80/tcp",
                "8766:443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Speedtest Tracker",
            "type": 1,
            "note": "<h3>Template created by darchap</h3><b>Check my Github page: <a href=\"https://github.com/darchap/docker-templates\" target=\"_blank\">https://github.com/darchap/docker-templates</a></b><br><br><br><b>Official Documentation: </b><a href=\"https://docs.speedtest-tracker.dev/\" target=\"_blank\">https://docs.speedtest-tracker.dev/</a><br><br>",
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/speedtest-tracker2",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/speedtest-tracker2/web",
                    "container": "/etc/ssl/web"
                }
            ]
        },
        {
            "categories": [
                "Other"
            ],
            "description": "FreshRSS is a self-hosted RSS feed aggregator.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Europe/Madrid",
                    "label": "TZ",
                    "name": "TZ"
                }
            ],
            "image": "linuxserver/freshrss:latest",
            "logo": "https://raw.githubusercontent.com/darchap/docker-templates/main/images/freshrss.png",
            "name": "freshrss",
            "platform": "linux",
            "ports": [
                "8132:80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "FreshRSS",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/freshrss",
                    "container": "/config"
                }
            ],
            "note": "<h3>Template created by darchap</h3><b>Check my Github page: <a href=\"https://github.com/darchap/docker-templates\" target=\"_blank\">https://github.com/darchap/docker-templates</a></b><br><br><b>Official FreshRSS Webpage: </b><a href=\"https://freshrss.org/\" target=\"_blank\">https://freshrss.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/linuxserver/freshrss\" target=\"_blank\">https://hub.docker.com/r/linuxserver/freshrss</a><br><br>"
        },
        {
            "categories": [
                "Music"
            ],
            "description": "Self hosted Spotify tracking dashboard.",
            "env": [
                {
                    "default": "3081",
                    "label": "API Port",
                    "name": "__api_port__"
                },
                {
                    "default": "3080",
                    "label": "Client Port",
                    "name": "__client_port__"
                },
                {
                    "default": "http://192.168.X.Y:3080",
                    "label": "Client Endpoint",
                    "name": "__client_endpoint__",
                    "description": "If you have changed the default client port don't forget to change it here too."
                },
                {
                    "default": "http://192.168.X.Y:3081",
                    "label": "API Endpoint",
                    "name": "__api_endpoint__",
                    "description": "If you have changed the default API port don't forget to change it here too."
                },
                {
                    "default": "Europe/Madrid",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "description": "Create a Spotify App and copy the Client ID: https://developer.spotify.com/dashboard/applications",
                    "label": "Spotify Client ID",
                    "name": "__your_spotify_client_id__"
                },
                {
                    "description": "Copy the Client Secret: https://developer.spotify.com/dashboard/applications",
                    "label": "Spotify Client Secret",
                    "name": "__your_spotify_secret__"
                }
            ],
            "name": "Your Spotify",
            "logo": "https://raw.githubusercontent.com/darchap/docker-templates/main/images/your-spotify.png",
            "note": "<h3>Template created by darchap</h3><b>Check my Github page: <a href=\"https://github.com/darchap/docker-templates\" target=\"_blank\">https://github.com/darchap/docker-templates</a></b><br><br><b>Official Docker Documentation: </b><a href=\"https://github.com/Yooooomi/your_spotify\" target=\"_blank\">https://github.com/Yooooomi/your_spotify</a><br><br>",
            "platform": "linux",
            "repository": {
                "stackfile": "stack/your-spotify.yml",
                "url": "https://github.com/darchap/docker-templates"
            },
            "title": "your-spotify",
            "type": 3
        }
    ]
}